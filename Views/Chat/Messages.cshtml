@model List<lol.Models.Message>
@{
    Layout = "~/Views/Shared/_MessengerLayout.cshtml";
    var interlocutor = ViewBag.Interlocutor;
}
<div class="chat-area d-flex flex-column h-100" style="min-height:0;">
    <div class="chat-header d-flex align-items-center justify-content-between p-3 border-bottom bg-white position-relative">
        <div class="d-flex align-items-center gap-2 chat-header-clickable" style="cursor:pointer;" data-bs-toggle="modal" data-bs-target="#userProfileModal">
            @if (interlocutor != null)
            {
                <img src="@(string.IsNullOrEmpty(interlocutor.AvatarPath) ? "/images/avatars/default.png" : interlocutor.AvatarPath)" alt="–ê–≤–∞—Ç–∞—Ä" style="width:40px;height:40px;border-radius:50%;object-fit:cover;">
                <span class="fw-bold">@interlocutor.FirstName @interlocutor.LastName</span>
            }
            else
            {
                <h4 id="chatTitle" class="mb-0">–ó–∞–≥—Ä—É–∑–∫–∞...</h4>
            }
        </div>
        <div class="d-flex align-items-center gap-2">
            <button id="searchToggleBtn" class="btn btn-light btn-sm" title="–ü–æ–∏—Å–∫ –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º"><i class="bi bi-search"></i></button>
            <div id="searchBox" class="search-popup shadow-sm p-2 bg-white rounded d-none">
                <div class="d-flex align-items-center gap-2 mb-2">
                    <input type="text" id="searchInput" class="form-control form-control-sm" placeholder="–ü–æ–∏—Å–∫..." autocomplete="off" style="width: 180px;" />
                    <button id="searchPrevBtn" class="btn btn-outline-secondary btn-sm px-2"><i class="bi bi-chevron-up"></i></button>
                    <span id="searchCount" class="small text-muted">0/0</span>
                    <button id="searchNextBtn" class="btn btn-outline-secondary btn-sm px-2"><i class="bi bi-chevron-down"></i></button>
                    <button id="searchCloseBtn" class="btn-close ms-1" aria-label="–ó–∞–∫—Ä—ã—Ç—å"></button>
                </div>
            </div>
            <button id="inviteButton" class="btn btn-outline-primary btn-sm" style="display: none;">+</button>
        </div>
    </div>
    <div id="messagesList" class="flex-grow-1 p-3" style="overflow-y:auto; min-height:0; background: #f8f9fa;">
        @foreach (var msg in Model)
        {
            <div class="mb-2 d-flex @(msg.UserId == ViewBag.UserId ? "justify-content-end" : "justify-content-start") message-item">
                <div class="message message-bubble @(msg.UserId == ViewBag.UserId ? "my-message" : "their-message") position-relative" data-message-id="@msg.Id">
                    @if (msg.ReplyToMessage != null)
                    {
                        <div class="reply-text reply-quote mb-1 p-2 rounded bg-light border" data-reply-to-id="@msg.ReplyToMessageId">
                            <span class="fw-bold small">@msg.ReplyToMessage.User.FirstName @msg.ReplyToMessage.User.LastName:</span>
                            <span class="text-muted small">@msg.ReplyToMessage.Text</span>
                        </div>
                    }
                    <div class="fw-bold small">@msg.User.FirstName @msg.User.LastName</div>
                    <div class="d-flex align-items-center">
                        <div class="message-text flex-grow-1">@msg.Text</div>
                        <span class="message-status"></span>
                        <button class="btn btn-link btn-sm reply-btn ms-2 px-1 py-0" title="–û—Ç–≤–µ—Ç–∏—Ç—å" data-message-id="@msg.Id" data-message-text="@msg.Text" data-message-author="@msg.User.FirstName @msg.User.LastName"><i class="bi bi-reply"></i></button>
                    </div>
                    @if (msg.Attachments != null && msg.Attachments.Any())
                    {
                        <div class="attachments-list mt-2">
                            @foreach (var att in msg.Attachments)
                            {
                                <div class="attachment-item d-inline-flex align-items-center me-2 mb-1 p-1 px-2 rounded">
                                    @if (att.ContentType != null && att.ContentType.StartsWith("image/"))
                                    {
                                        <a href="@att.FilePath" target="_blank" class="me-2"><img src="@att.FilePath" alt="@att.FileName" style="max-width:48px;max-height:48px;border-radius:6px;object-fit:cover;box-shadow:0 2px 8px #0001;"></a>
                                    }
                                    else if (att.ContentType != null && att.ContentType.StartsWith("video/"))
                                    {
                                        <a href="#" data-bs-toggle="modal" data-bs-target="#mediaPreviewModal" class="me-2 position-relative video-preview-link" style="display:inline-block;width:48px;height:48px;" data-video-src="@att.FilePath">
                                            <video src="@att.FilePath" style="width:48px;height:48px;object-fit:cover;border-radius:6px;box-shadow:0 2px 8px #0001;pointer-events:none;" preload="metadata"></video>
                                            <span class="position-absolute top-50 start-50 translate-middle" style="font-size:1.3em;color:#fff;text-shadow:0 2px 8px #000a;pointer-events:none;"><i class="bi bi-play-circle-fill"></i></span>
                                        </a>
                                    }
                                    else
                                    {
                                        <span class="file-icon me-2">
                                            <i class="bi bi-file-earmark"></i>
                                        </span>
                                    }
                                    <div class="file-info">
                                        <a href="@att.FilePath" target="_blank" class="file-name d-block text-decoration-none text-primary" style="max-width:120px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;">@att.FileName</a>
                                        <span class="file-size small text-muted">@((att.FileSize / 1024.0 / 1024.0).ToString("0.##")) –ú–ë</span>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    <div class="text-muted small text-end mt-1">@msg.SentAt.ToLocalTime().ToString("g")</div>
                </div>
            </div>
        }
    </div>
    <div id="replyPreview" class="reply-preview d-none align-items-center p-2 border-start border-4 border-primary bg-light mb-2" style="max-width: 500px;">
        <span class="fw-bold me-2" id="replyAuthor"></span>
        <span class="text-muted small me-2" id="replyText"></span>
        <button type="button" class="btn-close ms-auto" id="cancelReplyBtn" aria-label="–û—Ç–º–µ–Ω–∏—Ç—å"></button>
    </div>
    <div id="filePreviewList" class="file-preview-list mb-2" style="display:none;"></div>
    <form id="sendMessageForm" class="d-flex p-3 border-top gap-2 bg-white" style="flex-shrink:0; position:relative;">
        <input type="hidden" id="replyToMessageId" name="replyToMessageId" />
        <label for="fileInput" class="btn btn-light btn-sm d-flex align-items-center justify-content-center" style="height:38px;width:38px;padding:0;">
            <i class="bi bi-paperclip" style="font-size:1.3em;"></i>
        </label>
        <input type="file" id="fileInput" name="files" multiple style="display:none;" />
        <button type="button" id="emojiBtn" class="btn btn-light btn-sm d-flex align-items-center justify-content-center" style="height:38px;width:38px;padding:0;" tabindex="-1" title="–°–º–∞–π–ª–∏–∫–∏">
            <i class="bi bi-emoji-smile" style="font-size:1.3em;"></i>
        </button>
        <div id="emojiPanel" class="shadow rounded bg-white p-2" style="display:none;position:absolute;bottom:56px;left:60px;z-index:2000;width:320px;max-width:90vw;">
            <div class="d-flex mb-2 gap-1" id="emojiCategories">
                <button type="button" class="btn btn-light btn-sm emoji-cat-btn active" data-cat="smileys">üòä</button>
                <button type="button" class="btn btn-light btn-sm emoji-cat-btn" data-cat="animals">üêª</button>
                <button type="button" class="btn btn-light btn-sm emoji-cat-btn" data-cat="food">üçî</button>
                <button type="button" class="btn btn-light btn-sm emoji-cat-btn" data-cat="activity">‚öΩ</button>
                <button type="button" class="btn btn-light btn-sm emoji-cat-btn" data-cat="travel">üöó</button>
                <button type="button" class="btn btn-light btn-sm emoji-cat-btn" data-cat="symbols">‚ù§Ô∏è</button>
            </div>
            <div id="emojiList" style="max-height:180px;overflow-y:auto;font-size:1.5em;"></div>
        </div>
        <textarea id="messageInput" class="form-control message-input-area" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..." autocomplete="off" rows="1" style="resize:none;"></textarea>
        <button type="submit" class="btn btn-primary">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
    </form>
</div>
@section Styles {
    <style>
        .chat-header { background: #fff; color: #222; position: relative; }
        .chat-header img { margin-right: 10px; }
        .chat-area {
            display: flex;
            flex-direction: column;
            height: 100%;
            min-height: 0;
            background: #fff;
        }
        #messagesList {
            flex: 1 1 auto;
            overflow-y: auto;
            background: #f8f9fa;
            min-height: 0;
        }
        form#sendMessageForm {
            flex-shrink: 0;
            background: #fff;
        }
        .message-bubble { max-width: 60%; padding: 10px 15px; border-radius: 16px; background: #f1f3f6; color: #222; box-shadow: 0 2px 8px #0001; }
        .message-text {
            word-break: break-word;
            overflow-wrap: anywhere;
            white-space: pre-line;
        }
        .my-message { background: #e6eaff; color: #222; align-self: flex-end; }
        .their-message { background: #f1f3f6; color: #222; align-self: flex-start; }
        .search-popup {
            position: absolute;
            top: 60px;
            right: 10px;
            z-index: 10;
            min-width: 290px;
            max-width: 340px;
            padding-right: 0;
            display: block;
            box-shadow: 0 4px 16px #0002;
        }
        .search-popup.d-none { display: none !important; }
        .search-popup input { width: 180px; }
        .highlight-search {
            background: #fff8c6;
            border-radius: 4px;
            padding: 0 2px;
            font-weight: 500;
        }
        .current-search {
            background: #ffe066 !important;
            border: 1.5px solid #ffd700;
            font-weight: bold;
            box-shadow: 0 0 0 2px #ffd70033;
        }
        .reply-btn {
            opacity: 0.5;
            font-size: 1.1em;
            transition: opacity 0.2s;
            vertical-align: middle;
        }
        .message-bubble:hover .reply-btn {
            opacity: 1;
        }
        .reply-preview {
            border-left: 4px solid #0d6efd;
            background: #f1f3f6;
            border-radius: 6px;
            margin-left: 12px;
        }
        .reply-quote {
            border-left: 3px solid #6c47ff;
            background: #f6f6ff;
            font-size: 0.95em;
        }
        .message-input-area {
            min-height: 38px;
            max-height: 120px;
            resize: none;
            overflow-y: auto;
        }
        .reply-text {
            font-size: 0.9em;
            color: #666;
            margin-top: 2px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
        .chat-header-clickable:hover {
            background: #f6f6ff;
            transition: background 0.2s;
        }
        #userProfileModal .modal-content {
            background: #23232b;
            color: #fff;
            border-radius: 16px;
        }
        #userProfileModal .modal-header {
            border-bottom: none;
        }
        #userProfileModal .modal-body img {
            border: 3px solid #6c47ff;
        }
        #userProfileModal .nav-tabs .nav-link.active {
            background: #29293a;
            color: #fff;
            border: none;
        }
        #userProfileModal .nav-tabs .nav-link {
            color: #bbb;
        }
        .user-profile-sidebar {
            position: absolute;
            top: 0;
            right: 0;
            height: 100%;
            width: 350px;
            background: rgba(255,255,255,0.20);
            color: #222;
            z-index: 1050;
            box-shadow: -2px 0 16px #0002;
            transform: translateX(100%);
            transition: transform 0.3s cubic-bezier(.4,0,.2,1);
            display: flex;
            flex-direction: column;
            backdrop-filter: blur(8px);
        }
        .main-content { position: relative; }
        .user-profile-sidebar.open {
            transform: translateX(0);
        }
        .user-profile-sidebar .sidebar-header {
            padding: 24px 24px 12px 24px;
            border-bottom: 1px solid #ececec;
            background: transparent;
            position: relative;
            color: #222;
        }
        .user-profile-sidebar .btn-close {
            position: absolute;
            right: 16px;
            top: 24px;
            filter: none;
        }
        .user-profile-sidebar .sidebar-body {
            flex: 1 1 auto;
            padding: 24px;
            overflow-y: auto;
        }
        .user-profile-sidebar .rounded-circle {
            border: 3px solid #6c47ff22;
        }
        .user-profile-sidebar .nav-tabs .nav-link.active {
            background: #f6f6ff;
            color: #6c47ff;
            border: none;
        }
        .user-profile-sidebar .nav-tabs .nav-link {
            color: #888;
        }
        .file-preview-list {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            align-items: center;
            min-height: 32px;
        }
        .file-preview-item {
            background: #f6f6ff;
            border: 1px solid #ececec;
            border-radius: 8px;
            padding: 4px 10px 4px 6px;
            display: flex;
            align-items: center;
            font-size: 0.95em;
            max-width: 220px;
            box-shadow: 0 2px 8px #0001;
        }
        .file-preview-item .file-icon {
            font-size: 1.2em;
            margin-right: 6px;
        }
        .file-preview-item .file-remove {
            background: none;
            border: none;
            color: #888;
            margin-left: 8px;
            font-size: 1.1em;
            cursor: pointer;
        }
        .file-preview-item .file-remove:hover {
            color: #dc3545;
        }
        .file-preview-item .file-name {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            max-width: 110px;
        }
        .file-preview-item .file-size {
            color: #888;
            font-size: 0.93em;
            margin-left: 6px;
        }
        .attachments-list {
            display: flex;
            flex-wrap: wrap;
            gap: 8px 12px;
            margin-top: 4px;
        }
        .attachment-item {
            background: #f6f6ff;
            border: 1px solid #ececec;
            border-radius: 8px;
            padding: 4px 10px 4px 6px;
            display: flex;
            align-items: center;
            font-size: 0.97em;
            max-width: 220px;
            box-shadow: 0 2px 8px #0001;
            transition: box-shadow 0.2s;
        }
        .attachment-item:hover {
            box-shadow: 0 4px 16px #6c47ff22;
        }
        .attachment-item .file-icon {
            font-size: 1.5em;
            color: #6c47ff;
        }
        .attachment-item .file-info {
            min-width: 0;
        }
        .attachment-item .file-name {
            font-weight: 500;
            font-size: 1em;
            max-width: 120px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
        .attachment-item .file-size {
            font-size: 0.92em;
        }
        #mediaPreviewModal .modal-content {
            background: rgba(20,20,30,0.7) !important;
            backdrop-filter: blur(8px);
            border-radius: 16px;
            box-shadow: 0 4px 32px #000a;
        }
    </style>
}

<!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ -->
<div class="modal fade" id="inviteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="text" id="inviteUserSearchInput" class="form-control mb-2" placeholder="–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..." autocomplete="off" />
                <div id="inviteUserSearchResults" class="list-group mb-2"></div>
            </div>
        </div>
    </div>
</div>

<!-- –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è -->
@if (interlocutor != null)
{
<div id="userProfileSidebar" class="user-profile-sidebar">
    <div class="sidebar-header">
        <button type="button" class="btn-close btn-close-white float-end" id="closeUserProfileSidebar" aria-label="–ó–∞–∫—Ä—ã—Ç—å"></button>
        <h5 class="mt-2">–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h5>
    </div>
    <div class="sidebar-body text-center">
        <img src="@(string.IsNullOrEmpty(interlocutor.AvatarPath) ? "/images/avatars/default.png" : interlocutor.AvatarPath)" alt="–ê–≤–∞—Ç–∞—Ä" class="rounded-circle mb-3" style="width:90px;height:90px;object-fit:cover;">
        <h4 class="fw-bold mb-1">@interlocutor.FirstName @interlocutor.LastName</h4>
        <div class="mt-4">
            <ul class="nav nav-tabs justify-content-center" id="profileTab" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="media-tab" data-bs-toggle="tab" data-bs-target="#media" type="button" role="tab" aria-controls="media" aria-selected="true">–ú–µ–¥–∏–∞</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="files-tab" data-bs-toggle="tab" data-bs-target="#files" type="button" role="tab" aria-controls="files" aria-selected="false">–§–∞–π–ª—ã</button>
                </li>
            </ul>
            <div class="tab-content mt-3" id="profileTabContent">
                <div class="tab-pane fade show active text-muted" id="media" role="tabpanel" aria-labelledby="media-tab">
                    <div id="mediaGallery" class="row g-2 justify-content-center"></div>
                </div>
                <div class="tab-pane fade text-muted" id="files" role="tabpanel" aria-labelledby="files-tab">
                    <div id="filesList" class="list-group"></div>
                </div>
            </div>
        </div>
    </div>
</div>
}

<!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–µ–¥–∏–∞ -->
<div class="modal fade" id="mediaPreviewModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" style="max-width:90vw;">
        <div class="modal-content bg-dark text-white position-relative" style="background:rgba(20,20,30,0.7);border-radius:16px;backdrop-filter: blur(8px);">
            <button type="button" class="btn-close btn-close-white position-absolute top-0 end-0 m-3" data-bs-dismiss="modal" aria-label="–ó–∞–∫—Ä—ã—Ç—å" style="z-index:2;"></button>
            <div class="modal-body d-flex justify-content-center align-items-center" style="min-height:60vh;">
                <div id="mediaPreviewContent" class="w-100 text-center"></div>
            </div>
        </div>
    </div>
</div>

@if (interlocutor == null)
{
    <div id="groupChatSidebar" class="user-profile-sidebar">
        <div class="sidebar-header">
            <button type="button" class="btn-close btn-close-white float-end" id="closeGroupChatSidebar" aria-label="–ó–∞–∫—Ä—ã—Ç—å"></button>
            <h5 class="mt-2">–ì—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç</h5>
        </div>
        <div class="sidebar-body text-center">
            <div style="position:relative;display:inline-block;">
                <img id="groupAvatarImg" src="@(ViewBag.GroupAvatarPath ?? "/images/avatars/group.png")" alt="–ê–≤–∞—Ç–∞—Ä –≥—Ä—É–ø–ø—ã" class="rounded-circle mb-3" style="width:90px;height:90px;object-fit:cover;">
                <form id="groupAvatarForm" enctype="multipart/form-data" style="position:absolute;bottom:8px;right:8px;">
                    <label for="groupAvatarInput" style="cursor:pointer;background:#fff;border-radius:50%;padding:4px;box-shadow:0 2px 8px #0002;">
                        <i class="bi bi-camera" style="font-size:1.3em;"></i>
                    </label>
                    <input type="file" id="groupAvatarInput" name="avatar" accept="image/*" style="display:none;" />
                </form>
            </div>
            <h4 class="fw-bold mb-1" id="groupChatTitle">@ViewBag.ChatTitle ?? "–ì—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç"</h4>
            <div class="mt-2 mb-3">
                <div class="small text-muted" id="chatParticipants">–£—á–∞—Å—Ç–Ω–∏–∫–∏: ...</div>
            </div>
            <ul class="nav nav-tabs justify-content-center" id="groupProfileTab" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="group-media-tab" data-bs-toggle="tab" data-bs-target="#media" type="button" role="tab" aria-controls="media" aria-selected="true">–ú–µ–¥–∏–∞</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="group-files-tab" data-bs-toggle="tab" data-bs-target="#files" type="button" role="tab" aria-controls="files" aria-selected="false">–§–∞–π–ª—ã</button>
                </li>
            </ul>
            <div class="tab-content mt-3" id="groupProfileTabContent">
                <div class="tab-pane fade show active text-muted" id="media" role="tabpanel" aria-labelledby="group-media-tab">
                    <div id="mediaGallery" class="row g-2 justify-content-center"></div>
                </div>
                <div class="tab-pane fade text-muted" id="files" role="tabpanel" aria-labelledby="group-files-tab">
                    <div id="filesList" class="list-group"></div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script><script>
        const chatId = @ViewBag.ChatId;
        const userId = '@ViewBag.UserId';
        const userName = '@User.Identity.Name';
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub")
            .build();

        connection.start().then(function () {
            connection.invoke("JoinChat", chatId);
        });

        connection.on("ReceiveMessage", function (msgChatId, msgUserId, message) {
            if (msgChatId == chatId) {
                loadMessages();
            }
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ —Ç–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            if (msgUserId !== userId && window.Notification && Notification.permission === "granted") {
                new Notification("–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ", {
                    body: message,
                    icon: "/favicon.ico" // –∏–ª–∏ –ø—É—Ç—å –∫ –∏–∫–æ–Ω–∫–µ
                });
            }
        });

        connection.on("UserInvited", function (invitedUserId, chatId, chatName) {
            if (invitedUserId === userId) {
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∫–æ–ª–æ–∫–æ–ª—å—á–∏–∫
                connection.invoke("SendNotification", invitedUserId, "–í–∞—Å –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –≤ —á–∞—Ç: " + chatName);
            }
        });

        function loadMessages() {
            $.get('/Chat/Messages?chatId=' + chatId, function (data) {
                const html = $(data).find('#messagesList').html();
                $('#messagesList').html(html);
                $('#messagesList').scrollTop($('#messagesList')[0].scrollHeight);
            });
        }

        // –°–∫—Ä–æ–ª–ª–∏–º –≤–Ω–∏–∑ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        $(function () {
            $('#messagesList').scrollTop($('#messagesList')[0].scrollHeight);
        });

        // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ
        $.get('/Chat/GetChatInfo', { chatId: @ViewBag.ChatId }, function (data) {
            $('#chatTitle').text(data.name || (data.isGroup ? '–ì—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç' : data.isTeamChat ? '–ö–æ–º–∞–Ω–¥–Ω—ã–π —á–∞—Ç' : '–õ–∏—á–Ω—ã–π —á–∞—Ç'));
            if (data.isGroup || data.isTeamChat) {
                let participants = data.participants.map(p => p.firstName + ' ' + p.lastName).join(', ');
                $('#chatParticipants').text('–£—á–∞—Å—Ç–Ω–∏–∫–∏: ' + participants);
                $('#inviteButton').show();
            }
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        $('#inviteButton').on('click', function () {
            $('#inviteModal').modal('show');
        });
        $('#inviteUserSearchInput').on('input', function () {
            const query = $(this).val();
            if (!query) {
                $('#inviteUserSearchResults').empty();
                return;
            }
            $.get('/Chat/SearchUsers', { query: query }, function (data) {
                let html = '';
                data.forEach(function (u) {
                    html += `<button type="button" class="list-group-item list-group-item-action" onclick="inviteUser('${u.id}')">${u.firstName} ${u.lastName} (${u.userName})</button>`;
                });
                $('#inviteUserSearchResults').html(html);
            });
        });
        window.inviteUser = function (userId) {
            $.post('/Chat/InviteUser', { chatId: @ViewBag.ChatId, userId: userId }, function () {
                $('#inviteModal').modal('hide');
                // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
                $.get('/Chat/GetChatInfo', { chatId: @ViewBag.ChatId }, function (data) {
                    let participants = data.participants.map(p => p.firstName + ' ' + p.lastName).join(', ');
                    $('#chatParticipants').text('–£—á–∞—Å—Ç–Ω–∏–∫–∏: ' + participants);
                });
            });
        };

        // –ü–æ–∏—Å–∫ –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º
        let searchResults = [];
        let currentSearchIndex = 0;
        function updateSearchHighlights(query) {
            searchResults = [];
            currentSearchIndex = 0;
            $("#messagesList .message-text").each(function(i, el) {
                const $el = $(el);
                const text = $el.text();
                $el.html(text); // —Å–±—Ä–æ—Å–∏—Ç—å —Å—Ç–∞—Ä—É—é –ø–æ–¥—Å–≤–µ—Ç–∫—É
                if (query && text.toLowerCase().includes(query.toLowerCase())) {
                    // –ü–æ–¥—Å–≤–µ—Ç–∏—Ç—å –≤—Å–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
                    const regex = new RegExp('('+query+')', 'gi');
                    $el.html(text.replace(regex, '<span class="highlight-search">$1</span>'));
                    // –î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –ø–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è–º
                    $el.closest('.message-item').addClass('search-match');
                    searchResults.push($el.closest('.message-item')[0]);
                } else {
                    $el.closest('.message-item').removeClass('search-match');
                }
            });
            updateSearchCount();
            highlightCurrentSearch();
        }
        function updateSearchCount() {
            const count = searchResults.length;
            const current = count ? (currentSearchIndex + 1) : 0;
            $('#searchCount').text(current + '/' + count);
        }
        function highlightCurrentSearch() {
            $('.current-search').removeClass('current-search');
            if (searchResults.length > 0) {
                // –ù–∞–π—Ç–∏ –≤—Å–µ –ø–æ–¥—Å–≤–µ—á–µ–Ω–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
                let allHighlights = [];
                $('#messagesList .highlight-search').each(function() {
                    allHighlights.push(this);
                });
                // –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫ –∫–∞–∫–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é –æ—Ç–Ω–æ—Å–∏—Ç—Å—è —Ç–µ–∫—É—â–µ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
                let matchIndex = 0;
                for (let i = 0; i < searchResults.length; i++) {
                    if (searchResults[i] === searchResults[currentSearchIndex]) {
                        // –ù–∞–π—Ç–∏ n-–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –≤ —ç—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
                        let $msg = $(searchResults[i]);
                        let highlights = $msg.find('.highlight-search');
                        if (highlights.length > 0) {
                            $(highlights[0]).addClass('current-search');
                            highlights[0].scrollIntoView({ behavior: 'smooth', block: 'center' });
                        }
                        break;
                    }
                }
            }
        }
        $('#searchToggleBtn').on('click', function() {
            $('#searchBox').toggleClass('d-none');
            if (!$('#searchBox').hasClass('d-none')) {
                $('#searchInput').focus();
            }
        });
        $('#searchCloseBtn').on('click', function() {
            $('#searchBox').addClass('d-none');
            $('#searchInput').val('');
            updateSearchHighlights('');
        });
        $('#searchInput').on('input', function() {
            const query = $(this).val();
            updateSearchHighlights(query);
        });
        $('#searchPrevBtn').on('click', function() {
            if (searchResults.length === 0) return;
            currentSearchIndex = (currentSearchIndex - 1 + searchResults.length) % searchResults.length;
            updateSearchCount();
            highlightCurrentSearch();
        });
        $('#searchNextBtn').on('click', function() {
            if (searchResults.length === 0) return;
            currentSearchIndex = (currentSearchIndex + 1) % searchResults.length;
            updateSearchCount();
            highlightCurrentSearch();
        });
        // –°–±—Ä–æ—Å –ø–æ–∏—Å–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ —á–∞—Ç–∞
        $(function() {
            $('#searchBox').addClass('d-none');
            $('#searchInput').val('');
            updateSearchHighlights('');
        });

        // --- –û—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ ---
        let replyToId = null;
        $(document).on('click', '.reply-btn', function(e) {
            e.preventDefault();
            replyToId = $(this).data('message-id');
            const text = $(this).data('message-text');
            const author = $(this).data('message-author');
            $('#replyToMessageId').val(replyToId);
            $('#replyAuthor').text(author + ':');
            $('#replyText').text(text.length > 60 ? text.substring(0, 60) + '‚Ä¶' : text);
            $('#replyPreview').removeClass('d-none');
        });
        $('#cancelReplyBtn').on('click', function() {
            replyToId = null;
            $('#replyToMessageId').val('');
            $('#replyPreview').addClass('d-none');
        });
        // --- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Ñ–∞–π–ª–æ–≤ ---
        document.getElementById('sendMessageForm').addEventListener('submit', function(e) {
            const hasFiles = selectedFiles.length > 0;
            const text = document.getElementById('messageInput').value.trim();
            const replyId = document.getElementById('replyToMessageId').value;
            if (hasFiles) {
                e.preventDefault();
                if (selectedFiles.length === 0) return;
                const formData = new FormData();
                formData.append('chatId', chatId);
                formData.append('text', text);
                formData.append('replyToMessageId', replyId);
                selectedFiles.forEach(f => formData.append('files', f));
                fetch('/Chat/SendMessageWithFiles', {
                    method: 'POST',
                    body: formData
                })
                .then(r => r.json())
                .then(data => {
                    if (data.success) {
                        selectedFiles = [];
                        renderFilePreview();
                        document.getElementById('messageInput').value = '';
                        document.getElementById('replyToMessageId').value = '';
                        $('#replyPreview').addClass('d-none');
                        replyToId = null;
                        // –û–ø–æ–≤–µ—â–∞–µ–º –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ –Ω–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ —Å —Ñ–∞–π–ª–æ–º
                        connection.invoke("SendMessageToChat", chatId, userId, text || '[–§–∞–π–ª]');
                        loadMessages && loadMessages();
                    } else {
                        alert(data.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–æ–≤!');
                    }
                })
                .catch(() => alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–æ–≤!'));
                return false;
            } else {
                // –¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç ‚Äî –æ–±—ã—á–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ AJAX
                e.preventDefault();
                if (!text) return;
                $.post('/Chat/SendMessage', { chatId: chatId, text: text, replyToMessageId: replyId }, function () {
                    connection.invoke("SendMessageToChat", chatId, userId, text);
                    document.getElementById('messageInput').value = '';
                    document.getElementById('replyToMessageId').value = '';
                    $('#replyPreview').addClass('d-none');
                    replyToId = null;
                });
                return false;
            }
        }, true);

        // –ê–≤—Ç–æ—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ textarea
        function autoGrowTextarea(el) {
            el.style.height = 'auto';
            el.style.height = (el.scrollHeight) + 'px';
        }
        $(document).on('input', '#messageInput', function() {
            autoGrowTextarea(this);
        });
        $(function() {
            autoGrowTextarea(document.getElementById('messageInput'));
        });

        $(document).on('click', '.reply-text', function() {
            var replyToId = $(this).data('reply-to-id');
            if (replyToId) {
                var targetMessage = $('.message[data-message-id="' + replyToId + '"]');
                if (targetMessage.length) {
                    targetMessage[0].scrollIntoView({ behavior: 'smooth', block: 'center' });
                }
            }
        });

        // –û—Ç–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å
        const sidebar = document.getElementById('userProfileSidebar');
        const groupSidebar = document.getElementById('groupChatSidebar');
        if (sidebar || groupSidebar) {
            document.querySelector('.chat-header-clickable').onclick = function() {
                if (sidebar) sidebar.classList.add('open');
                if (groupSidebar) groupSidebar.classList.add('open');
                renderProfileMediaAndFiles();
            };
            const closeBtn = document.getElementById('closeUserProfileSidebar');
            if (closeBtn && sidebar) {
                closeBtn.onclick = function() {
                    sidebar.classList.remove('open');
                };
            }
            const closeGroupBtn = document.getElementById('closeGroupChatSidebar');
            if (closeGroupBtn && groupSidebar) {
                closeGroupBtn.onclick = function() {
                    groupSidebar.classList.remove('open');
                };
            }
            document.addEventListener('mousedown', function(e) {
                if (sidebar && sidebar.classList.contains('open') && !sidebar.contains(e.target) && !e.target.classList.contains('chat-header-clickable')) {
                    sidebar.classList.remove('open');
                }
                if (groupSidebar && groupSidebar.classList.contains('open') && !groupSidebar.contains(e.target) && !e.target.classList.contains('chat-header-clickable')) {
                    groupSidebar.classList.remove('open');
                }
            });
        }

        // --- –§–∞–π–ª—ã ---
        const MAX_FILE_SIZE = 200 * 1024 * 1024; // 200 –ú–ë
        let selectedFiles = [];

        function formatBytes(bytes) {
            if (bytes === 0) return '0 –ë';
            const k = 1024;
            const sizes = ['–ë', '–ö–ë', '–ú–ë', '–ì–ë'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }

        function getFileIcon(file) {
            // –ú–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –ø–æ —Ç–∏–ø—É —Ñ–∞–π–ª–∞
            if (file.type.startsWith('image/')) return '<i class="bi bi-file-image"></i>';
            if (file.type.startsWith('video/')) return '<i class="bi bi-file-earmark-play"></i>';
            if (file.type.startsWith('audio/')) return '<i class="bi bi-file-music"></i>';
            if (file.type === 'application/pdf') return '<i class="bi bi-file-earmark-pdf"></i>';
            if (file.type.startsWith('application/zip') || file.name.endsWith('.rar')) return '<i class="bi bi-file-zip"></i>';
            return '<i class="bi bi-file-earmark"></i>';
        }

        function renderFilePreview() {
            const preview = document.getElementById('filePreviewList');
            preview.innerHTML = '';
            if (selectedFiles.length === 0) {
                preview.style.display = 'none';
                return;
            }
            preview.style.display = 'flex';
            selectedFiles.forEach((file, idx) => {
                const div = document.createElement('div');
                div.className = 'file-preview-item';
                div.innerHTML = `
                    <span class="file-icon">${getFileIcon(file)}</span>
                    <span class="file-name" title="${file.name}">${file.name}</span>
                    <span class="file-size">${formatBytes(file.size)}</span>
                    <button type="button" class="file-remove" title="–£–¥–∞–ª–∏—Ç—å" data-idx="${idx}"><i class="bi bi-x"></i></button>
                `;
                preview.appendChild(div);
            });
            // –ö–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
            preview.querySelectorAll('.file-remove').forEach(btn => {
                btn.onclick = function() {
                    const idx = parseInt(this.getAttribute('data-idx'));
                    selectedFiles.splice(idx, 1);
                    renderFilePreview();
                };
            });
        }

        document.getElementById('fileInput').addEventListener('change', function(e) {
            const files = Array.from(e.target.files);
            let error = '';
            files.forEach(file => {
                if (file.size > MAX_FILE_SIZE) {
                    error = `–§–∞–π–ª "${file.name}" –ø—Ä–µ–≤—ã—à–∞–µ—Ç 200 –ú–ë –∏ –Ω–µ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω.`;
                } else {
                    selectedFiles.push(file);
                }
            });
            if (error) {
                alert(error);
            }
            // –û—á–∏—â–∞–µ–º input, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –≤—ã–±—Ä–∞—Ç—å —Ç–æ—Ç –∂–µ —Ñ–∞–π–ª —Å–Ω–æ–≤–∞
            e.target.value = '';
            renderFilePreview();
        });

        // --- –ú–ï–î–ò–ê –∏ –§–ê–ô–õ–´ –≤ –ø—Ä–æ—Ñ–∏–ª–µ ---
        function renderProfileMediaAndFiles() {
            $.get('/Chat/GetChatAttachments', { chatId: chatId }, function(data) {
                // –ú–µ–¥–∏–∞
                const media = data.filter(a => a.contentType && (a.contentType.startsWith('image/') || a.contentType.startsWith('video/')));
                let mediaHtml = '';
                media.forEach(a => {
                    if (a.contentType.startsWith('image/')) {
                        mediaHtml += `<div class='col-auto'><span style='cursor:pointer;display:inline-block;'><img src='${a.filePath}' alt='' style='width:80px;height:80px;object-fit:cover;border-radius:8px;box-shadow:0 2px 8px #0001;'></span></div>`;
                    } else if (a.contentType.startsWith('video/')) {
                        mediaHtml += `<div class='col-auto position-relative' style='width:80px;height:80px;'>
                            <span style='display:block;width:80px;height:80px;position:relative;cursor:pointer;'>
                                <video src='${a.filePath}' style='width:80px;height:80px;object-fit:cover;border-radius:8px;box-shadow:0 2px 8px #0001;pointer-events:none;' preload='metadata'></video>
                                <span class='position-absolute top-50 start-50 translate-middle' style='font-size:2.2em;color:#fff;text-shadow:0 2px 8px #000a;pointer-events:none;'><i class='bi bi-play-circle-fill'></i></span>
                            </span>
                        </div>`;
                    }
                });
                $('#mediaGallery').html(mediaHtml || '<div class="text-muted">–ù–µ—Ç –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤</div>');
                // –§–∞–π–ª—ã
                const files = data.filter(a => !a.contentType || (!a.contentType.startsWith('image/') && !a.contentType.startsWith('video/')));
                let filesHtml = '';
                files.forEach(a => {
                    let icon = '<i class="bi bi-file-earmark"></i>';
                    if (a.contentType && a.contentType.startsWith('audio/')) icon = '<i class="bi bi-file-music"></i>';
                    if (a.contentType === 'application/pdf') icon = '<i class="bi bi-file-earmark-pdf"></i>';
                    if (a.contentType && (a.contentType.startsWith('application/zip') || (a.fileName && a.fileName.endsWith('.rar')))) icon = '<i class="bi bi-file-zip"></i>';
                    filesHtml += `<a href='${a.filePath}' target='_blank' class='list-group-item list-group-item-action d-flex align-items-center'><span class='me-2'>${icon}</span><span class='flex-grow-1 text-truncate'>${a.fileName || '–§–∞–π–ª'}</span><span class='ms-2 small text-muted'>${(a.fileSize/1024/1024).toFixed(2)} –ú–ë</span></a>`;
                });
                $('#filesList').html(filesHtml || '<div class="text-muted p-2">–ù–µ—Ç —Ñ–∞–π–ª–æ–≤</div>');
            });
        }

        // --- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–µ–¥–∏–∞ ---
        $(document).on('click', '.attachment-item img, .attachment-item video', function(e) {
            e.preventDefault();
            const src = $(this).attr('src');
            const isVideo = $(this).is('video');
            let html = '';
            if (isVideo) {
                html = `<video src='${src}' controls autoplay style='max-width:90vw;max-height:80vh;border-radius:12px;box-shadow:0 4px 32px #000a;'></video>`;
            } else {
                html = `<img src='${src}' alt='' style='max-width:90vw;max-height:80vh;border-radius:12px;box-shadow:0 4px 32px #000a;' />`;
            }
            $('#mediaPreviewContent').html(html);
            var modal = new bootstrap.Modal(document.getElementById('mediaPreviewModal'));
            modal.show();
        });

        $(document).on('click', '.video-preview-link', function(e) {
            e.preventDefault();
            var videoSrc = $(this).data('video-src');
            var html = `<video src='${videoSrc}' controls autoplay style='max-width:90vw;max-height:80vh;border-radius:12px;box-shadow:0 4px 32px #000a;'></video>`;
            $('#mediaPreviewContent').html(html);
        });
        // –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª–∫–∏
        $('#mediaPreviewModal').on('hidden.bs.modal', function () {
            $('#mediaPreviewContent').html('');
        });

        // --- –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –º–µ–¥–∏–∞ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏ –ø—Ä–æ—Ñ–∏–ª—è ---
        $(document).on('click', '#mediaGallery .col-auto', function(e) {
            e.preventDefault();
            let $img = $(this).find('img');
            let $video = $(this).find('video');
            let html = '';
            if ($video.length) {
                const src = $video.attr('src');
                html = `<video src='${src}' controls autoplay style='max-width:90vw;max-height:80vh;border-radius:12px;box-shadow:0 4px 32px #000a;'></video>`;
            } else if ($img.length) {
                const src = $img.attr('src');
                html = `<img src='${src}' alt='' style='max-width:90vw;max-height:80vh;border-radius:12px;box-shadow:0 4px 32px #000a;' />`;
            }
            if (html) {
                $('#mediaPreviewContent').html(html);
                var modal = new bootstrap.Modal(document.getElementById('mediaPreviewModal'));
                modal.show();
            }
        });

        // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ –¥–ª—è –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ sidebar
        $(function() {
            const groupSidebar = document.getElementById('groupChatSidebar');
            if (groupSidebar) {
                $.get('/Chat/GetChatInfo', { chatId: @ViewBag.ChatId }, function (data) {
                    $('#groupChatTitle').text(data.name || '–ì—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç');
                    if (data.isGroup || data.isTeamChat) {
                        let participants = data.participants.map(p => p.firstName + ' ' + p.lastName).join(', ');
                        $('#chatParticipants').text('–£—á–∞—Å—Ç–Ω–∏–∫–∏: ' + participants);
                    }
                });
            }
        });

        // JS –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∫–∏ –≥—Ä—É–ø–ø—ã
        $(function() {
            const groupAvatarInput = document.getElementById('groupAvatarInput');
            const groupAvatarForm = document.getElementById('groupAvatarForm');
            if (groupAvatarInput && groupAvatarForm) {
                groupAvatarInput.addEventListener('change', function() {
                    if (!this.files.length) return;
                    const formData = new FormData();
                    formData.append('chatId', '@ViewBag.ChatId');
                    formData.append('avatar', this.files[0]);
                    $.ajax({
                        url: '/Chat/UploadGroupAvatar',
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function(data) {
                            if (data.success && data.avatarPath) {
                                $('#groupAvatarImg').attr('src', data.avatarPath + '?_=' + new Date().getTime());
                            } else {
                                alert(data.error || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∫–∏!');
                            }
                        },
                        error: function() {
                            alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∫–∏!');
                        }
                    });
                });
            }
        });

        // --- –≠–º–æ–¥–∑–∏ –ø–∞–Ω–µ–ª—å ---
        const emojiData = {
            smileys: ["üòÄ","üòÅ","üòÇ","ü§£","üòÉ","üòÑ","üòÖ","üòÜ","üòâ","üòä","üòã","üòé","üòç","üòò","ü•∞","üòó","üòô","üòö","üôÇ","ü§ó","ü§©","ü§î","ü§®","üòê","üòë","üò∂","üôÑ","üòè","üò£","üò•","üòÆ","ü§ê","üòØ","üò™","üò´","ü•±","üò¥","üòå","üòõ","üòú","üòù","ü§§","üòí","üòì","üòî","üòï","üôÉ","ü§ë","üò≤","‚òπÔ∏è","üôÅ","üòñ","üòû","üòü","üò§","üò¢","üò≠","üò¶","üòß","üò®","üò©","ü§Ø","üò¨","üò∞","üò±","ü•µ","ü•∂","üò≥","ü§™","üòµ","üò°","üò†","ü§¨","üò∑","ü§í","ü§ï","ü§¢","ü§ñ","ü§ó","üòá","ü•≥"],
            animals: ["üê∂","üê±","üê≠","üêπ","üê∞","ü¶ä","üêª","üêº","üê®","üêØ","ü¶Å","üêÆ","üê∑","üê∏","üêµ","üôà","üôâ","üôä","üêî","üêß","üê¶","üê§","üê£","üê•","ü¶Ü","ü¶Ö","ü¶â","ü¶á","üê∫","üêó","üê¥","ü¶Ñ","üêù","üêõ","ü¶ã","üêå","üêû","üêú","ü¶ü","ü¶ó","üï∑","ü¶Ç","üê¢","üêç","ü¶é","ü¶ñ","ü¶ï","üêô","ü¶ë","ü¶ê","ü¶û","ü¶Ä","üê°","üê†","üêü","üê¨","üê≥","üêã","ü¶à","üêä","üêÖ","üêÜ","ü¶ì","ü¶ç","ü¶ß","üêò","ü¶õ","ü¶è","üê™","üê´","ü¶í","ü¶ò","ü¶•","ü¶¶","ü¶®","ü¶°","üêÅ","üêÄ","üêø","ü¶î"],
            food: ["üçè","üçé","üçê","üçä","üçã","üçå","üçâ","üçá","üçì","ü´ê","üçà","üçí","üçë","ü•≠","üçç","ü••","ü•ù","üçÖ","üçÜ","ü•ë","ü•¶","ü•¨","ü•í","üå∂","ü´ë","üåΩ","ü•ï","ü´í","üßÑ","üßÖ","ü•î","üç†","ü•ê","ü•Ø","üçû","ü•ñ","ü•®","ü•û","üßá","üßÄ","üçñ","üçó","ü•©","ü•ì","üçî","üçü","üçï","üå≠","ü•™","üåÆ","üåØ","ü•ô","üßÜ","ü•ö","üç≥","ü•ò","üç≤","ü•£","ü•ó","üçø","üßà","üßÇ","ü•´","üç±","üçò","üçô","üçö","üçõ","üçú","üçù","üç†","üç¢","üç£","üç§","üç•","ü•Æ","üç°","ü•ü","ü•†","ü•°","ü¶™","üç¶","üçß","üç®","üç©","üç™","üéÇ","üç∞","üßÅ","ü•ß","üç´","üç¨","üç≠","üçÆ","üçØ","üçº","ü•õ","‚òï","üçµ","üßÉ","ü•§","üßã","üç∂","üç∫","üçª","ü•Ç","üç∑","ü•É","üç∏","üçπ","üçæ","üßâ","üßä"],
            activity: ["‚öΩ","üèÄ","üèà","‚öæ","ü•é","üéæ","üèê","üèâ","ü•è","üé±","ü™Ä","üèì","üè∏","ü•Ö","üèí","üèë","üèè","ü•ç","üèπ","üé£","ü§ø","ü•ä","ü•ã","üéΩ","üõπ","üõ∑","‚õ∏","ü•å","üéø","‚õ∑","üèÇ","ü™Ç","üèãÔ∏è‚Äç‚ôÇÔ∏è","üèãÔ∏è‚Äç‚ôÄÔ∏è","ü§º‚Äç‚ôÇÔ∏è","ü§º‚Äç‚ôÄÔ∏è","ü§∏‚Äç‚ôÇÔ∏è","ü§∏‚Äç‚ôÄÔ∏è","‚õπÔ∏è‚Äç‚ôÇÔ∏è","‚õπÔ∏è‚Äç‚ôÄÔ∏è","ü§∫","ü§æ‚Äç‚ôÇÔ∏è","ü§æ‚Äç‚ôÄÔ∏è","üèåÔ∏è‚Äç‚ôÇÔ∏è","üèåÔ∏è‚Äç‚ôÄÔ∏è","üèá","üßò‚Äç‚ôÇÔ∏è","üßò‚Äç‚ôÄÔ∏è","üèÑ‚Äç‚ôÇÔ∏è","üèÑ‚Äç‚ôÄÔ∏è","üèä‚Äç‚ôÇÔ∏è","üèä‚Äç‚ôÄÔ∏è","ü§Ω‚Äç‚ôÇÔ∏è","ü§Ω‚Äç‚ôÄÔ∏è","üö£‚Äç‚ôÇÔ∏è","üö£‚Äç‚ôÄÔ∏è","üßó‚Äç‚ôÇÔ∏è","üßó‚Äç‚ôÄÔ∏è","üöµ‚Äç‚ôÇÔ∏è","üöµ‚Äç‚ôÄÔ∏è","üö¥‚Äç‚ôÇÔ∏è","üö¥‚Äç‚ôÄÔ∏è","üèÜ","ü•á","ü•à","ü•â","üèÖ","üéñ","üèµ","üéó","üé´","üéü","üé™","ü§π‚Äç‚ôÇÔ∏è","ü§π‚Äç‚ôÄÔ∏è","üé≠","ü©∞","üé®","üé¨","üé§","üéß","üéº","üéπ","ü•Å","üé∑","üé∫","üé∏","üéª","üé≤","‚ôü","üé≥","üéÆ","üé∞"],
            travel: ["üöó","üöï","üöô","üöå","üöé","üèé","üöì","üöë","üöí","üöê","üõª","üöö","üöõ","üöú","ü¶Ø","ü¶Ω","ü¶º","üõ¥","üö≤","üõµ","üèç","üõ∫","üö®","üöî","üöç","üöò","üöñ","üö°","üö†","üöü","üöÉ","üöã","üöû","üöù","üöÑ","üöÖ","üöà","üöÇ","üöÜ","üöá","üöä","üöâ","‚úàÔ∏è","üõ´","üõ¨","üõ©","üí∫","üõ∞","üöÄ","üõ∏","üöÅ","üõ∂","‚õµ","üö§","üõ•","üõ≥","‚õ¥","üö¢","‚öì","ü™ù","‚õΩ","üöß","üö¶","üö•","üöè","üó∫","üóø","üóΩ","üóº","üè∞","üèØ","üèü","üé°","üé¢","üé†","‚õ≤","‚õ±","üèñ","üèù","üèú","üåã","‚õ∞","üèî","üóª","üèï","‚õ∫","üè†","üè°","üèò","üèö","üèó","üè≠","üè¢","üè¨","üè£","üè§","üè•","üè¶","üè®","üè©","üè™","üè´","üè©","üíí","üèõ","‚õ™","üïå","üõï","üïç","üïã","‚õ©","üõ§","üõ£","üóæ","üéë","üèû","üåÖ","üåÑ","üå†","üéá","üéÜ","üåá","üåÜ","üèô","üåâ","üåÅ"],
            symbols: ["‚ù§Ô∏è","üß°","üíõ","üíö","üíô","üíú","üñ§","ü§ç","ü§é","üíî","‚ù£Ô∏è","üíï","üíû","üíì","üíó","üíñ","üíò","üíù","üíü","‚òÆÔ∏è","‚úùÔ∏è","‚ò™Ô∏è","üïâ","‚ò∏Ô∏è","‚ú°Ô∏è","üîØ","üïé","‚òØÔ∏è","‚ò¶Ô∏è","üõê","‚õé","‚ôà","‚ôâ","‚ôä","‚ôã","‚ôå","‚ôç","‚ôé","‚ôè","‚ôê","‚ôë","‚ôí","‚ôì","üÜî","‚öõÔ∏è","üâë","‚ò¢Ô∏è","‚ò£Ô∏è","üì¥","üì≥","üà∂","üàö","üà∏","üà∫","üà∑Ô∏è","‚ú¥Ô∏è","üÜö","üíÆ","üâê","„äôÔ∏è","„äóÔ∏è","üà¥","üàµ","üàπ","üà≤","üÖ∞Ô∏è","üÖ±Ô∏è","üÜé","üÜë","üÖæÔ∏è","üÜò","‚ùå","‚≠ï","üõë","‚õî","üìõ","üö´","üíØ","üí¢","‚ô®Ô∏è","üö∑","üöØ","üö≥","üö±","üîû","üìµ","üö≠","‚ùó","‚ùì","‚ÄºÔ∏è","‚ÅâÔ∏è","üîÖ","üîÜ","„ÄΩÔ∏è","‚ö†Ô∏è","üö∏","üî±","‚öúÔ∏è","üî∞","‚ôªÔ∏è","‚úÖ","üàØ","üíπ","‚ùáÔ∏è","‚ú≥Ô∏è","‚ùé","üåê","üí†","‚ìÇÔ∏è","üåÄ","üí§","üèß","üöæ","‚ôø","üÖøÔ∏è","üõó","üöπ","üö∫","üöº","üöª","üöÆ","üé¶","üì∂","üàÅ","üî£","‚ÑπÔ∏è","üî§","üî°","üî†","üÜñ","üÜó","üÜô","üÜí","üÜì","üÜî","üÜï","üÜñ","üÜó","üÜò","üÜô","üÜö","üÜõ","üÜú","üÜù","üÜû","üÜü","üÜ†","üÜ°","üÜ¢","üÜ£","üÜ§","üÜ•","üÜ¶","üÜß","üÜ®","üÜ©","üÜ™","üÜ´","üÜ¨","üÜ≠","üÜÆ","üÜØ","üÜ∞","üÜ±","üÜ≤","üÜ≥","üÜ¥","üÜµ","üÜ∂","üÜ∑","üÜ∏","üÜπ","üÜ∫","üÜª","üÜº","üÜΩ","üÜæ","üÜø"]
        };
        const emojiBtn = document.getElementById('emojiBtn');
        const emojiPanel = document.getElementById('emojiPanel');
        const emojiList = document.getElementById('emojiList');
        const emojiCategories = document.getElementById('emojiCategories');
        const messageInput = document.getElementById('messageInput');
        let currentCat = 'smileys';
        function renderEmojiList(cat) {
            emojiList.innerHTML = '';
            emojiData[cat].forEach(e => {
                const btn = document.createElement('button');
                btn.type = 'button';
                btn.className = 'emoji-btn-telegram';
                btn.textContent = e;
                btn.onclick = function() {
                    // –í—Å—Ç–∞–≤–∫–∞ —ç–º–æ–¥–∑–∏ –≤ —Ç–µ–∫—É—â–µ–µ –º–µ—Å—Ç–æ –∫—É—Ä—Å–æ—Ä–∞
                    const start = messageInput.selectionStart;
                    const end = messageInput.selectionEnd;
                    const value = messageInput.value;
                    messageInput.value = value.substring(0, start) + e + value.substring(end);
                    messageInput.focus();
                    messageInput.selectionStart = messageInput.selectionEnd = start + e.length;
                    emojiPanel.style.display = 'none';
                };
                emojiList.appendChild(btn);
            });
        }
        if (emojiBtn && emojiPanel && emojiList && emojiCategories) {
            emojiBtn.addEventListener('click', function(e) {
                e.preventDefault();
                if (emojiPanel.style.display === 'none') {
                    renderEmojiList(currentCat);
                    emojiPanel.style.display = 'block';
                } else {
                    emojiPanel.style.display = 'none';
                }
            });
            emojiCategories.querySelectorAll('.emoji-cat-btn').forEach(btn => {
                btn.onclick = function() {
                    emojiCategories.querySelectorAll('.emoji-cat-btn').forEach(b => b.classList.remove('active'));
                    btn.classList.add('active');
                    currentCat = btn.getAttribute('data-cat');
                    renderEmojiList(currentCat);
                };
            });
            // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–∞–Ω–µ–ª–∏ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ
            document.addEventListener('mousedown', function(e) {
                if (emojiPanel.style.display === 'block' && !emojiPanel.contains(e.target) && e.target !== emojiBtn) {
                    emojiPanel.style.display = 'none';
                }
            });
        }

        // --- –†–µ–∞–ª—Ç–∞–π–º –æ—Ç—á—ë—Ç –æ –ø—Ä–æ—á—Ç–µ–Ω–∏–∏ ---
        function markVisibleMessagesAsRead() {
            $(".message-bubble").each(function() {
                const msgId = $(this).data("message-id");
                const isMine = $(this).hasClass("my-message");
                if (!isMine && isElementInViewport(this)) {
                    $.post("/Chat/MarkAsRead", { messageId: msgId });
                    connection.invoke("NotifyMessageRead", chatId, msgId, userId);
                }
            });
        }
        function isElementInViewport(el) {
            const rect = el.getBoundingClientRect();
            return (
                rect.top >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight)
            );
        }
        $(function() {
            markVisibleMessagesAsRead();
            $("#messagesList").on("scroll", function() { markVisibleMessagesAsRead(); });
        });
        // --- –ì–∞–ª–æ—á–∫–∞ "–ø—Ä–æ—á–∏—Ç–∞–Ω–æ" ---
        function updateReadStatus() {
            $(".my-message").each(function() {
                const msgId = $(this).data("message-id");
                const $status = $(this).find(".message-status");
                // –ï—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å –≥–∞–ª–æ—á–∫–∞ ‚Äî –Ω–µ –æ–ø—Ä–∞—à–∏–≤–∞–µ–º
                if ($status.find('.read-status').length > 0) return;
                $.get(`/Chat/IsMessageReadByAll?messageId=${msgId}`, function(data) {
                    if (data.isRead) {
                        $status.html("<span class='read-status ms-1' title='–ü—Ä–æ—á–∏—Ç–∞–Ω–æ'><i class='bi bi-check2-all text-primary'></i></span>");
                    }
                });
            });
        }
        $(function() { updateReadStatus(); });
        // --- SignalR: –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ—á—Ç–µ–Ω–∏—è ---
        connection.on("MessageRead", function(msgChatId, msgId, readUserId) {
            if (msgChatId == chatId) updateReadStatus();
        });
    </script>
} 