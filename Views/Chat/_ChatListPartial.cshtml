@model List<lol.Models.Chat>
@{
    var currentUserId = ViewBag.UserId as string;
    int? activeChatId = ViewBag.ActiveChatId as int?;
}
<div class="sidebar-header p-3 border-bottom d-flex align-items-center">
    <span class="fw-bold fs-5">Мои чаты</span>
</div>
<div class="chat-list">
@if (Model == null || !Model.Any())
{
    <div class="alert alert-info m-3">У вас пока нет чатов.</div>
}
else
{
    foreach (var chat in Model)
    {
        var interlocutor = chat.ChatUsers?.FirstOrDefault(u => u.UserId != currentUserId)?.User;
        var lastMsg = chat.Messages?.OrderByDescending(m => m.SentAt).FirstOrDefault();
        var isActive = activeChatId.HasValue && chat.Id == activeChatId.Value;
        <a href="@Url.Action("Messages", "Chat", new { chatId = chat.Id })" class="chat-list-item d-flex align-items-center @(isActive ? "active" : "")">
            @if (chat.IsGroup)
            {
                <img src="@(string.IsNullOrEmpty(chat.AvatarPath) ? "/images/avatars/group.png" : chat.AvatarPath)" alt="Аватар" style="width:44px;height:44px;border-radius:50%;object-fit:cover;margin-right:12px;" />
            }
            else
            {
                <img src="@(interlocutor != null && !string.IsNullOrEmpty(interlocutor.AvatarPath) ? interlocutor.AvatarPath : "/images/avatars/default.png")" alt="Аватар" style="width:44px;height:44px;border-radius:50%;object-fit:cover;margin-right:12px;" />
            }
            <div class="flex-grow-1">
                <div class="fw-bold">
                    @if (chat.IsGroup)
                    {
                        @(chat.Name ?? "Групповой чат")
                    }
                    else if (chat.IsTeamChat)
                    {
                        @("Командный чат")
                    }
                    else if (interlocutor != null)
                    {
                        @($"{interlocutor.FirstName} {interlocutor.LastName}")
                    }
                    else
                    {
                        @("Личный чат")
                    }
                </div>
                <div class="text-muted small text-truncate" style="max-width:180px;">
                    @(lastMsg != null ? lastMsg.Text : "Нет сообщений")
                </div>
            </div>
            <div class="text-end ms-2">
                <div class="small text-muted">
                    @(lastMsg != null ? lastMsg.SentAt.ToLocalTime().ToString("HH:mm") : "")
                </div>
                @* Здесь можно добавить индикаторы (например, непрочитанные) *@
            </div>
        </a>
    }
}
</div>
<!-- Плавающая кнопка создания чата -->
<button id="createChatBtn" class="btn btn-primary rounded-circle shadow position-fixed" style="bottom:32px; left:32px; width:56px; height:56px; z-index:1100; font-size:2em; display:flex; align-items:center; justify-content:center;">
    <i class="bi bi-plus"></i>
</button>
@section Styles {
    <style>
        .sidebar-header { background: #23232b; color: #fff; }
        .chat-list { padding: 0; }
        .chat-list-item { border-bottom: 1px solid #29293a; color: #fff; transition: background 0.2s; }
        .chat-list-item:hover { background: #29293a; }
        .chat-list-item .fw-bold { font-size: 1.1em; }
        .chat-list-item.active {
            background: #6c47ff !important;
            color: #fff !important;
            box-shadow: 0 2px 8px #6c47ff33;
        }
        .chat-list-item.active .fw-bold,
        .chat-list-item.active .text-muted {
            color: #fff !important;
        }
        #createChatBtn {
            box-shadow: 0 4px 16px #6c47ff44;
            background: #6c47ff;
            border: none;
        }
        #createChatBtn:hover {
            background: #5633d7;
        }
    </style>
}
@section Scripts {
    <script>
        // Открытие модалки
        $('#createChatBtn').on('click', function() {
            $('#createChatModal').modal('show');
        });
        // Переключение типа чата
        $('input[name="chatType"]').on('change', function() {
            if ($('#privateType').is(':checked')) {
                $('#createPrivateChatForm').show();
                $('#createGroupChatForm').hide();
            } else {
                $('#createPrivateChatForm').hide();
                $('#createGroupChatForm').show();
            }
        });
        // Поиск пользователя для личного чата
        $('#privateUserSearch').on('input', function() {
            const query = $(this).val();
            if (!query) { $('#privateUserResults').empty(); return; }
            $.get('/Chat/SearchUsers', { query: query }, function(data) {
                let html = '';
                data.forEach(function(u) {
                    html += `<button type="button" class="list-group-item list-group-item-action" data-id="${u.id}">${u.firstName} ${u.lastName} (${u.userName})</button>`;
                });
                $('#privateUserResults').html(html);
            });
        });
        $('#privateUserResults').on('click', 'button', function() {
            $('#privateUserId').val($(this).data('id'));
            $('#privateUserSearch').val($(this).text());
            $('#privateUserResults').empty();
        });
        // Отправка формы личного чата
        $('#createPrivateChatForm').on('submit', function(e) {
            e.preventDefault();
            const userId = $('#privateUserId').val();
            if (!userId) return;
            $.post('/Chat/CreatePrivate', { userId: userId }, function(data) {
                window.location.href = data.redirectUrl || data;
            });
        });
        // Поиск и выбор участников для группы
        let groupUsers = [];
        $('#groupUserSearch').on('input', function() {
            const query = $(this).val();
            if (!query) { $('#groupUserResults').empty(); return; }
            $.get('/Chat/SearchUsers', { query: query }, function(data) {
                let html = '';
                data.forEach(function(u) {
                    if (!groupUsers.includes(u.id))
                        html += `<button type="button" class="list-group-item list-group-item-action" data-id="${u.id}">${u.firstName} ${u.lastName} (${u.userName})</button>`;
                });
                $('#groupUserResults').html(html);
            });
        });
        $('#groupUserResults').on('click', 'button', function() {
            const id = $(this).data('id');
            const name = $(this).text();
            if (!groupUsers.includes(id)) {
                groupUsers.push(id);
                $('#groupSelectedUsers').append(`<span class="badge bg-primary me-1 mb-1" data-id="${id}">${name} <span style="cursor:pointer;" class="remove-user">&times;</span></span>`);
            }
            $('#groupUserResults').empty();
            $('#groupUserSearch').val('');
        });
        // Удаление участника
        $('#groupSelectedUsers').on('click', '.remove-user', function() {
            const id = $(this).parent().data('id');
            groupUsers = groupUsers.filter(u => u !== id);
            $(this).parent().remove();
        });
        // Отправка формы группового чата
        $('#createGroupChatForm').on('submit', function(e) {
            e.preventDefault();
            const name = $('#groupName').val();
            if (!name || groupUsers.length === 0) return;
            $.post('/Chat/CreateGroup', { name: name, userIds: groupUsers }, function(data) {
                window.location.href = data.redirectUrl || data;
            });
        });
    </script>
} 