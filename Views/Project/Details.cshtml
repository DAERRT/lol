@model lol.Models.Project
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@using lol.Models
@{
    ViewData["Title"] = "Детали проекта";
    var user = UserManager.GetUserAsync(User).Result;
    var isTeamLead = User.IsInRole("Тимлид");
    var team = isTeamLead ? ViewBag.Team as Team : null;
    var alreadyApplied = ViewBag.AlreadyApplied as bool? ?? false;
}

<h2>Детали проекта</h2>

<div class="card">
    <div class="card-body">
        <dl class="row">
            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.IdeaName)</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.IdeaName)</dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Problem)</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Problem)</dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Solution)</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Solution)</dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.ExpectedResult)</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.ExpectedResult)</dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.NecessaryResources)</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.NecessaryResources)</dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Stack)</dt>
            <dd class="col-sm-9">
                @foreach (var tech in (Model.Stack ?? "").Split(',').Select(s => s.Trim()).Where(s => !string.IsNullOrEmpty(s)))
                {
                    <span class="tech-badge" style="background:@StackColorHelper.GetColor(tech)">@tech</span>
                }
            </dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Customer)</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Customer)</dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Initiator)</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Initiator)</dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Status)</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Status)</dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.CreatedAt)</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.CreatedAt)</dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.UpdatedAt)</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.UpdatedAt)</dd>

            @if (Model.PublishedAt.HasValue)
            {
                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.PublishedAt)</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.PublishedAt)</dd>
            }
        </dl>
    </div>
</div>

@if (Model.ExecutorTeams != null && Model.ExecutorTeams.Any())
{
    <div class="mt-4">
        <strong>Команды-исполнители:</strong>
        <ul>
        @foreach (var execTeam in Model.ExecutorTeams)
        {
            <li style="display: flex; align-items: center; gap: 10px;">
                <a asp-controller="Team" asp-action="Details" asp-route-id="@execTeam.Id">@execTeam.Name</a>
                @if (User.IsInRole("Заказчик") && Model.Customer == User.Identity.Name)
                {
                    <form asp-action="RemoveExecutor" asp-controller="Project" method="post" style="display:inline; margin:0;">
                        <input type="hidden" name="projectId" value="@Model.Id" />
                        <input type="hidden" name="teamId" value="@execTeam.Id" />
                        <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Удалить команду из исполнителей?');">Удалить</button>
                    </form>
                }
            </li>
        }
        </ul>
    </div>
}

@if (Model.Status == lol.Models.ProjectStatus.Editing && !string.IsNullOrWhiteSpace(Model.EditComment))
{
    if (Model.EditComment.StartsWith("Проект отклонён тремя экспертами. Причины:"))
    {
        <div class="alert alert-warning mt-3">
            <strong>Причины отклонения экспертами:</strong>
            <ul class="mb-0">
            @foreach (var line in Model.EditComment.Replace("Проект отклонён тремя экспертами. Причины:\n", "").Split(new[] { "\n\n" }, System.StringSplitOptions.RemoveEmptyEntries))
            {
                var parts = line.Split(new[] { "\nКомментарий: " }, System.StringSplitOptions.None);
                if (parts.Length == 2)
                {
                    <li><b>@parts[0].Replace("Эксперт: ", ""):</b> @parts[1]</li>
                }
                else
                {
                    <li>@line</li>
                }
            }
            </ul>
        </div>
    }
    else
    {
        <div class="alert alert-warning mt-3">
            <strong>Комментарий администратора:</strong><br />
            @Model.EditComment
        </div>
    }
}

<div class="mt-3">
    <a asp-action="Index" class="btn btn-secondary">Назад к списку</a>
    @if (!ViewBag.IsInActiveExchange)
    {
        @if (User.IsInRole("Заказчик") && Model.Customer == User.Identity.Name)
        {
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">Редактировать</a>
            <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">Удалить</a>
        }
        @if (User.IsInRole("Администратор"))
        {
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">Редактировать</a>
            <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">Удалить</a>
        }
    }
    @if (isTeamLead && alreadyApplied)
    {
        <div class="alert alert-info mt-3">Ваша команда уже подала заявку на этот проект.</div>
    }
</div>

<style>
    .tech-badge {
        display: inline-block;
        border-radius: 6px;
        padding: 4px 12px;
        margin: 2px 6px 2px 0;
        font-size: 14px;
        color: #333;
        background: #e0e0e0;
        transition: background 0.2s;
    }
    .tech-badge:hover {
        filter: brightness(0.95);
    }
</style> 